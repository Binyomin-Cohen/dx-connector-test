//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are reserved words in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class CodeTestRunResult {
    public static final String OUTCOME_PASS = 'Pass';
    public static final String OUTCOME_FAIL = 'Fail';

    public class ApexClass {
        public Attributes attributes {get;set;}
        public String name {get;set;}
    }
    public Integer size {get;set;}
    public Integer totalSize {get;set;}
    public Boolean done {get;set;}
    public String queryLocator {get;set;}
    public String entityTypeName {get;set;}
    public List<Records> records {get;set;}
    public Exception error {get;set;}

    public class Attributes {
        public String type_Z {get;set;} // in json: type
        public String url {get;set;}
    }

    public class Records {
        public Attributes attributes {get;set;}
        public String asyncApexJobId {get;set;}
        public String methodName {get;set;}
        public String outcome {get;set;}
        public String message {get;set;}
        public String stackTrace {get;set;}
        public Integer runTime {get;set;}
        public String apexLogId {get;set;}
        public ApexClass apexClass {get;set;}
    }

    public List<Unit_Test_Failure__c> deconstructIntoSobjectRecords() {
        List<Unit_Test_Failure__c> recordsToReturn = new List<Unit_Test_Failure__c>();

        if (records != null) {
            for (Records rec : records) {
                if (rec.outcome == OUTCOME_FAIL) {
                    Unit_Test_Failure__c recordToReturn = new Unit_Test_Failure__c(
                        Apex_Log_Id__c = rec.apexLogId,
                        Message__c = (String) rec.message,
                        Method_Name__c = rec.methodName,
                        Run_Time__c = rec.runTime,
                        Class_Name__c = rec.apexClass.name,
                        Stack_Trace__c = (String) rec.stackTrace
                    );

                   recordsToReturn.add(recordToReturn);
                }
            }
        }

        return recordsToReturn;
    }
}