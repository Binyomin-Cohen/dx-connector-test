//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//
// The supplied json has fields with names that are reserved words in apex
// and so can only be parsed with explicitly generated code, this option
// was auto selected for you.

public class CodeCoverageAggregate {

    public class ApexClassOrTrigger {
        public Attributes attributes {get;set;}
        public String id {get;set;}
        public String name {get;set;}
    }

    public Integer size {get;set;}
    public Integer totalSize {get;set;}
    public Boolean done {get;set;}
    public String queryLocator {get;set;}
    public String entityTypeName {get;set;}
    public List<Records> records {get;set;}
    public Exception error {get;set;}

    public class Attributes {
        public String type_Z {get;set;} // in json: type
        public String url {get;set;}
    }

    public class Records {
        public Attributes attributes {get;set;}
        public ApexClassOrTrigger apexClassOrTrigger {get;set;}
        public Integer numLinesCovered {get;set;}
        public Integer numLinesUncovered {get;set;}
    }

    public List<Code_Coverage__c> deconstructIntoSobjectRecords() {
        List<Code_Coverage__c> recordsToReturn = new List<Code_Coverage__c>();

        if (records != null) {
            for (Records rec : records) {
                if(rec.apexClassOrTrigger != null) {
                    Decimal numLinesCoveredToAdd = rec.numLinesCovered == null ? 0 : rec.numLinesCovered;
                    Decimal numLinesUnCoveredToAdd = rec.numLinesUncovered == null ? 0 : rec.numLinesUncovered;
                
                    Code_Coverage__c recordToReturn = new Code_Coverage__c(
                        Class_Id__c = rec.apexClassOrTrigger.id,
                        Class_Name__c = rec.apexClassOrTrigger.name,
                        Lines_Covered__c = rec.numLinesCovered,
                        Total_Lines__c = numLinesCoveredToAdd + numLinesUnCoveredToAdd
                    );
                    
                    recordsToReturn.add(recordToReturn);
                }
                
            }
        }

        return recordsToReturn;
    }
}